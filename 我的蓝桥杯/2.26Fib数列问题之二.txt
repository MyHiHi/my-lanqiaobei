#include <iostream>
using namespace std;
#define LL long long
LL a,b;
const LL MAXLEN=1000;
struct matrix{
    LL m[MAXLEN][MAXLEN];  
}ans,base;

// 问题是求[1 1]^n  [1 0]为 1
//         [1 0]    [0 1]
matrix multi(matrix x,matrix y){
    matrix temp;
    for (int i=0;i<2;i++){
        for (int j=0;j<2;j++){
            temp.m[i][j]=0;
            for (int k=0;k<2;k++){
                temp.m[i][j]=(temp.m[i][j]+x.m[i][k]*y.m[k][j])%b;
            }
        }
    }
    return temp;
}

LL getAns(LL n){
    base.m[0][0] = base.m[0][1] = base.m[1][0] = 1;
    base.m[1][1] = 0;
    ans.m[0][0] = ans.m[1][1] = 1;  // ans初始化为单位矩阵 
    ans.m[0][1] = ans.m[1][0] = 0;
    while(n)
    {
        if(n & 1)  
            ans = multi(ans, base);

        base = multi(base, base);  //base每次会成倍变大
        n >>= 1;// n=n/2;
    }
    return ans.m[0][1];

}

int main(){
   
  
   cin >> a>> b;
   cout << getAns(a);
}