
#include <iostream>
#include <string.h>
using namespace std;
const int MAXLEN=120;
char walk[MAXLEN][MAXLEN];
int mark[MAXLEN][MAXLEN];
int perNum=0;
int direction[4][2]={{1,0},{0,1},{-1,0},{0,-1}};

void dfs(int a,int b){
    mark[a][b]=1;
    for (int x=0;x<4;x++){
        int nX=a+direction[x][0];
        int nY=b+direction[x][1];
        if (walk[nX][nY]=='#' && mark[nX][nY]==0)
            dfs(nX,nY);
    }
}
int main(){
    int n,m;
    cin >> n>>m;
    memset(mark,0,sizeof(mark));
    for (int x=0;x<n;x++)
        for (int y=0;y<m;y++){
            char a;
            cin >> a;
            walk[x][y]=a;
        }
        
        
    for (int x=0;x<n;x++)
        for (int y=0;y<m;y++){
            if (walk[x][y]=='#' && mark[x][y]==0){
                dfs(x,y);
                perNum++;
            }
        }
    cout <<perNum;
    return 0;
}